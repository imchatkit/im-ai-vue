# 项目介绍
一个即时通讯的前端项目
使用vue语言

#编码规范
-要考虑同时兼容web网页端和兼容electron打包出来的pc端 mac端和Windows端


### 一、项目结构设计
```plaintext
```
src/
├── main.ts                # 应用入口
├── modules/
│   ├── im-core/          # 即时通讯核心模块
│   ├── electron-bridge/  # Electron本地能力桥接
│   ├── web-adapter/      # 网页端适配模块
├── assets/               # 静态资源
├── components/           # 公共组件
│   ├── chat/
│   │   ├── MessageBubble.vue  # 消息气泡组件
│   │   ├── InputPanel.vue     # 输入面板组件
├── views/
│   ├── MainLayout.vue     # 主界面布局框架
│   ├── ContactList.vue    # 联系人列表
│   ├── ChatWindow.vue     # 聊天主窗口
│   ├── Settings.vue       # 系统设置

### 二、核心功能模块
1. 即时通讯基础功能
- 消息传输：支持文本/图片/文件（ `MessageBubble` 组件处理多种消息类型）
- 消息状态：已发送/已送达/已读状态指示
- 消息撤回：2分钟内可撤回（跨平台统一逻辑）
2. 会话管理功能
- 多会话标签页：仿浏览器标签页管理（适配Electron窗体特性）
- 会话搜索：支持按时间/联系人/关键词检索
- 消息历史：本地存储+云端同步机制
3. 用户体系功能
- 联系人分组：同事/好友/群组三级分类
- 在线状态：显示用户活跃状态（⚡Electron需常驻后台）
- 个人信息卡：支持头像/签名/状态修改
### 三、界面布局方案
<template>
  <!-- 三栏响应式布局 -->
  <div class="main-container">
    <!-- 左侧导航 (宽度可折叠) -->
    <div class="left-nav">
      <UserProfile />
      <ContactSearch />
      <ContactCategoryTabs />
    </div>

    <!-- 中间主聊天区 -->
    <div class="main-chat">
      <ChatHeader :current-contact="currentContact" />
      <MessageList :messages="messages" />
      <MessageInputPanel @send="handleSend" />
    </div>

    <!-- 右侧信息面板 (Electron下可独立窗口) -->
    <div class="right-panel">
      <ChatToolsPanel />
      <FilePreviewPanel />
      <SystemStatusBar />
    </div>
  </div>
</template>

<style scoped>
/* 跨平台适配 */
@media screen and (max-width: 768px) {
  /* 移动端适配 */
}
</style>


### 四、跨平台特殊处理
1. Electron专属功能
- 系统托盘消息提醒
- 本地文件系统访问（ `electron-bridge` 模块）
- 窗口管理（最小化到托盘）
2. 网页端优化
- 浏览器通知API集成
- 渐进式Web应用(PWA)支持
- 响应式布局适配
### 五、扩展功能规划
1. 企业级功能
- 组织架构树形展示
- 审批流程集成
- 消息水印设置
2. 增强通讯能力
- 屏幕共享（Electron使用desktopCapturer）
- 远程协作白板
- 消息翻译引擎集成
建议采用Flexbox+Grid布局体系，通过CSS变量实现主题切换，所有平台相关逻辑通过 `platform-adapter` 和 `electron-bridge` 模块隔离实现跨平台兼容。



# 布局设计

根据企业微信PC端的实际布局设计，我为您整理以下结构特点描述：

### 一、整体布局结构（三栏式设计）
1. 左侧导航区 (宽度280px±)
- 顶部企业Logo区域（支持切换企业）
- 消息/通讯录/文档/工作台四联导航按钮
- 会话列表（包含单聊/群聊/服务号）按时间排序，支持置顶
2. 中间主工作区
- 当前会话标题栏（含成员管理/会话设置）
- 消息瀑布流展示（支持文件/审批/日程等富交互消息）
- 输入面板（多模态输入：文字/表情/文件拖拽/截图）
3. 右侧扩展面板 (宽度320px±)
- 联系人信息卡（含组织架构树）
- 群成员列表（带部门标签）
- 当前文件/链接共享区
- 快捷应用入口（审批/日报等）
### 二、特色交互设计
1. 全局搜索栏 （顶部中央位置）
- 支持消息/联系人/文件综合搜索
- 快捷键唤醒（Ctrl+Q）
2. 多会话管理
- 仿浏览器标签页（最多开10个会话）
- 未读消息红点计数（含消息免打扰模式）
3. 状态指示系统
- 界面右下角常驻：网络状态/安全认证标识
- 托盘图标（Windows任务栏）显示未读数

### 三、与您项目结构的对应优化建议
1. 在 `MainLayout` 中：
```vue
<!-- 建议添加 -->
<div class="global-search-bar">
  <SearchInput @search="handleGlobalSearch" />
  <div class="quick-actions">
    <button @click="toggleSessionTabs">会话标签</button>
    <UnreadCounter :count="totalUnread" />
  </div>
</div>
 ```

2. 右侧面板可扩展性设计：
```scss
.right-panel {
  // 添加企业微信式折叠控制
  .panel-collapser {
    position: absolute;
    left: -12px;
    top: 50%;
    transform: translateY(-50%);
    cursor: pointer;
    &:hover { /* ... */ }
  }
  
  // 组织架构树样式
  .org-tree {
    @apply overflow-y-auto h-[calc(100vh-200px)];
    li::before { /* 树形连接线 */ }
  }
}
 ```

### 四、交互细节增强建议
1. 实现会话列表的「未读提及」高亮效果
2. 添加消息气泡的上下文菜单（回复/转发/收藏）
3. 输入框支持@成员智能提示（对接 `ContactList` 组件）
4. 系统通知采用toast形式从右下角弹出（兼容Electron托盘提醒）
该布局方案既保留了传统IM的交互习惯，又融入了企业级应用的高效特性，建议在您的 `views` 模块中分阶段实现这些布局特性。